# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: npm build
      uses: actions/setup-node@v1
      with:
        node-version: 8.10.0
        registry-url: https://registry.npmjs.org/
    - run: |
        cd jvm-ui
        npm install
        npm run build
        tar zcf dist.tar.gz ./dist
        ls
        pwd
        cd ..

    - name: maven build
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package -Dmaven.test.skip=true --file pom.xml



    - name: ssh scp ssh pipelines
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      env:
        WELCOME: "ssh scp ssh pipelines"
        LASTSSH: "Doing something after copying"
      with:
        host: ${{ secrets.ALI_CLOUD_HOST }}
        user: ${{ secrets.ALI_CLOUD_USERNAME }}
        pass: ${{ secrets.ALI_CLOUD_PASSWORD }}
        port: ${{ secrets.ALI_CLOUD_PORT }}
        connect_timeout: 30s
        first_ssh: |
          rm -rf /home/github/temp
          mkdir -p /home/github/temp &&
        scp: |
          './jvm/target/jvm*.jar' => /home/github/temp/
          './jvm-ui/dist.tar.gz' => /home/github/temp/
        last_ssh: |
          cd /home/github/test/
          tar zxf dist.tar.gz
          rm -rf /opt/service/jvm-ui
          mv dist /opt/service/jvm-ui
          rm -rf /opt/service/jvm/*
          mv jvm*.jar /opt/service/jvm/jvm.jar
          cd /opt/service/jvm/
          pid=`ps -ef | grep "jvm.jar" | grep -v "grep" | awk '{print $2}'`
          if [ "$pid" = "" ];           then               echo "jvm.jar is not running";           else               kill -9 $pid;               echo "kill pid:$pid";           fi
          BUILD_ID=dontKillMe nohup java -jar jvm.jar &
